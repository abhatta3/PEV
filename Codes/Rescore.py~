import math
import sys

ifile=sys.argv[1] #'asms_rescore.tsv'
scan_map_file=sys.argv[2] #"Scan_files_fixed.txt"
outputfile=sys.argv[3] #"Results.txt"
annotation=sys.argv[4]
            
annot_dic={}

with open(annotation,"r") as adata:
    for line in adata:
        line=line.strip().split("\t")
        eid=line[0]
        ad=line[1]
        seq=line[2]
        annot_dic[eid]={'type':ad,'seq':seq}


scan_event={}
eventlist={}
with open(scan_map_file,"r") as mapf:
    for line in mapf:
        if '#' in line:
            continue
        line=line.strip().split("\t")
        if len(line)<2:
            continue
        evalue=float(line[4])
        scan_event[line[3]]={'ev':line[0],'speval':evalue}
        if eventlist.has_key(line[0]):
            score=float(-1.0*float(math.log(evalue)))
            if score>eventlist[line[0]]:
                eventlist[line[0]]=score
        else:
            eventlist[line[0]]=float(-1.0*float(math.log(evalue)))
            

score_by_event={}
score_by_event_n={}
event_seq_mod={}        
event_seq_nov={}
        
with open(ifile,"r") as data:
    for line in data:
        if '#' == line[0] or 'XXX_' in line:
            continue
        line=line.strip().split('\t')
        scanno=line[2]
        evalue=float(line[12])
        peptide=line[8]
        tagl=line[9]
        if scan_event.has_key(scanno):
            s_event=scan_event[scanno]['ev']
            n_eval=scan_event[scanno]['speval']
            score=float(-1.0*float(math.log(n_eval/evalue)))
            if score_by_event.has_key(s_event):
                if score>score_by_event[s_event]:
                    score_by_event[s_event]=score
                    event_seq_nov[s_event]=peptide
            else:
                score_by_event[s_event]=score
                event_seq_nov[s_event]=peptide
    
            if score_by_event_n.has_key(s_event):
                if score<score_by_event_n[s_event]:
                    score_by_event_n[s_event]=score
                    event_seq_mod[s_event]=peptide
            else:
                score_by_event_n[s_event]=score
                event_seq_mod[s_event]=peptide

            
with open(outputfile,"w") as output:
    output.write("#Event_ID\tProteogenomics_Peptide\tPEV_sequence\tVariant_Type\tPEV_Score\tIdentification_Class\n")

    for ev in eventlist:
        if score_by_event.has_key(ev):
            score=score_by_event[ev]
        else:
            score=eventlist[ev]
        
        if event_seq_mod.has_key(ev):
            newseq=event_seq_mod[ev]
        else:
            newseq='-'

        if score>0.0:
            category='True'
        else:
            category='False'
        
        evlist=ev.split(',') 
        for fev in evlist:
            if annot_dic.has_key(fev):
                mev=annot_dic[fev]['type']
                seq=annot_dic[fev]['seq']
            else:
                mev='unknown'
                seq='-'
                
            output.write("%s\t%s\t%s\t%s\t%f\t%s\n" %(fev,seq,newseq,mev,score,category))
                
